// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                  Int           @id @default(autoincrement())
  rents               Rent[]
  activeRent          Rent?         @relation("UserActiveRent", fields: [activeRentId], references: [id])
  activeRentId        String?       @unique
  reservations        Reservation[]
  activeReservation   Reservation?  @relation("UserActiveReservation", fields: [activeReservationId], references: [id])
  activeReservationId String?       @unique
}

model Scooter {
  id                  Int           @id @default(autoincrement())
  rentAble            Boolean
  rents               Rent[]
  activeRent          Rent?         @relation("ScooterActiveRent", fields: [activeRentId], references: [id])
  activeRentId        String?       @unique
  reservations        Reservation[]
  activeReservation   Reservation?  @relation("ScooterActiveReservation", fields: [activeReservationId], references: [id])
  activeReservationId String?       @unique
}

model Rent {
  id                String        @id @default(uuid(7))
  user              User          @relation(fields: [userId], references: [id])
  userId            Int
  scooter           Scooter       @relation(fields: [scooterId], references: [id])
  scooterId         Int
  startDate         DateTime
  endDate           DateTime?
  userActiveRent    User?         @relation("UserActiveRent")
  scooterActiveRent Scooter?      @relation("ScooterActiveRent")
  Reservation       Reservation[]
}

model Reservation {
  id                       String    @id @default(uuid(7))
  user                     User      @relation(fields: [userId], references: [id])
  userId                   Int
  scooter                  Scooter   @relation(fields: [scooterId], references: [id])
  scooterId                Int
  expiredAt                DateTime
  rent                     Rent?     @relation(fields: [rentId], references: [id])
  rentId                   String?
  userActiveReservation    User?     @relation("UserActiveReservation")
  scooterActiveReservation Scooter?  @relation("ScooterActiveReservation")
}
